{"version":3,"sources":["lib/viewport-detection.es6.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\nconst _ = require(\"lodash\");\n\nclass ViewportDetection {\n\n    addCallback(c){\n      if(_.isFunction(c)){\n        this.callbacks.push(c);\n      } else {\n        throw new Error(\"Not a function\");\n      }\n    }\n\n    constructor(cb){\n      this.currentWidth = 0;\n      this.callbacks     = [];\n      this.trackerCalled = false;\n      if(_.isFunction(cb)){\n        this.callbacks.push(cb);\n      }\n\n    }\n\n    getDevice(){\n      let winWidth = this.windowSize().width;\n      // console.log(\"winWidth\", this.windowSize());\n      if(winWidth <= 991 ){\n        return \"mobile\";\n      } else if (winWidth > 992 && winWidth < 1199){\n        return \"tablet\";\n      }\n\n      return \"desktop\";\n    }\n\n    getWidth(w){\n      if(_.isNumber(w)){\n        this.currentWidth = w;\n      }\n      return this.currentWidth;\n    }\n\n    init(){\n       let tracker = ()=>{\n          this.resizeFn();\n       }.bind(this);\n\n       window.addEventListener(\n          \"resize\", tracker, false\n        );\n\n       window.addEventListener(\n          \"orientationchange\", tracker, false\n        );\n    }\n\n    isSmartDevice(){\n        // Adapted from http://www.detectmobilebrowsers.com\n        let ua = window.navigator.userAgent || window.navigator.vendor || window.opera;\n\n        //Checks for iOs, Android, Blackberry, Opera Mini, and Windows mobile devices\n        return (/iPhone|iPod|iPad|Silk|Android|BlackBerry|Opera Mini|IEMobile/).test(ua);\n    }\n\n    resizeFn(){\n      let sizeObj = this.windowSize();\n      if(this.sizeChange(sizeObj.width)){\n        this.runCallBacks(sizeObj);\n      }\n    }\n\n    runCallBacks(size){\n      let device = this.getDevice(size.width);\n      _.forEach(this.callbacks, (cb)=>{\n        cb(device, size);\n      });\n    }\n\n    sizeChange(w){\n      if(this.currentWidth === w){\n        return false;\n      }\n\n      this.currentWidth = w;\n      return true;\n    }\n\n    touchSupport(){\n      return window.touch;\n    }\n\n    trackSize(callback){\n      this.addCallback(callback);\n\n      if(!this.trackerCalled){\n         window.addEventListener(\n          \"DOMContentLoaded\",\n          this.init.bind(this),\n          false\n        );\n      }\n    }\n\n    windowSize(){\n      return {\n        height : window.innerHeight,\n        width  : window.innerWidth\n      };\n    }\n}\n\nmodule.exports = ViewportDetection;\n"]}